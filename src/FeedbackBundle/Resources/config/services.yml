services:
    feedback_bundle.admin.goal_admin:
        class: FeedbackBundle\Admin\GoalAdmin
        arguments:
            - ~
            - FeedbackBundle\Entity\Goal
            - ~
        tags:
          - { name: sonata.admin, manager_type: orm, label: "Goal", group: "Activities" }
        calls:
          - [setTranslationDomain, [admin]]

    feedback_bundle.admin.recognition_admin:
        class: FeedbackBundle\Admin\RecognitionAdmin
        arguments:
            - ~
            - FeedbackBundle\Entity\Recognition
            - ~
        tags:
          - { name: sonata.admin, manager_type: orm, label: "Recognition", group: "Activities" }
        calls:
          - [setTranslationDomain, [admin]]

    feedback_bundle.admin.recognition_type_admin:
        class: FeedbackBundle\Admin\RecognitionTypeAdmin
        arguments:
            - ~
            - FeedbackBundle\Entity\RecognitionType
            - ~
        tags:
          - { name: sonata.admin, manager_type: orm, label: "Recognition type", group: "Activities" }
        calls:
          - [setTranslationDomain, [admin]]

    feedback_bundle.admin.session_admin:
        class: FeedbackBundle\Admin\SessionAdmin
        arguments:
            - ~
            - FeedbackBundle\Entity\Session
            - ~
        tags:
          - { name: sonata.admin, manager_type: orm, label: "Feedback session", group: "Activities" }
        calls:
          - [setTranslationDomain, [admin]]

    feedback_bundle.admin.base_question_admin:
        class: FeedbackBundle\Admin\BaseQuestionAdmin
        arguments:
            - ~
            - FeedbackBundle\Entity\BaseQuestion
            - ~
        tags:
          - { name: sonata.admin, manager_type: orm, label: "Question", group: "Activities" }
        calls:
          - [setTranslationDomain, [admin]]

    feedback_bundle.event_subscriber.recognition_subscriber:
        class: FeedbackBundle\EventSubscriber\RecognitionSubscriber
        arguments:
            - '@security.token_storage'
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    feedback_bundle.event_subscriber.session_subscriber:
        class: FeedbackBundle\EventSubscriber\SessionSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    feedback_bundle.form.recognition_handler:
        class: FeedbackBundle\Form\RecognitionHandler
        arguments:
            - '@security.token_storage'